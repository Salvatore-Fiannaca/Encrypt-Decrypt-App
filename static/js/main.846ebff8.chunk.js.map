{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","message","setMessage","messageisValid","setValidMsg","key","setKey","keyisValid","setValidKey","btnCopyVisible","setBtnCopyVisible","changeHandler","e","target","type","value","length","className","cn","placeholder","onChange","onClick","createAdapter","setAlgorithm","EncryptionAlgorithm","CBC","setDerivationRounds","encrypt","then","res","toString","catch","decrypt","alert","window","isSecureContext","navigator","clipboard","writeText","textArea","document","createElement","style","position","body","appendChild","focus","select","execCommand","removeChild","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"ydAIaA,EAAgB,WAC3B,MAA+BC,mBAAiB,IAAhD,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAuCF,oBAAkB,GAAzD,mBAAQG,EAAR,KAAwBC,EAAxB,KACA,EAAuBJ,mBAAiB,IAAxC,mBAAQK,EAAR,KAAaC,EAAb,KACA,EAAmCN,oBAAkB,GAArD,mBAAQO,EAAR,KAAoBC,EAApB,KACA,EAA6CR,oBAAkB,GAA/D,mBAAQS,EAAR,KAAwBC,EAAxB,KA8BA,SAASC,EAAeC,GACA,aAAlBA,EAAEC,OAAOC,OACXN,EAAYI,EAAEC,OAAOE,MAAMC,OAAS,GACpCV,EAAOM,EAAEC,OAAOE,QAEI,aAAlBH,EAAEC,OAAOC,OACXV,EAAYQ,EAAEC,OAAOE,MAAMC,OAAS,GACpCd,EAAWU,EAAEC,OAAOE,QAgCxB,OACE,sBAAKE,UAAU,iBAAf,UACE,iCACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOA,UAAU,OAAjB,sBACA,0BACEA,UAAWC,IACT,eACA,CAAC,WAAYf,GACb,CAAC,cAAeA,IAElBgB,YAAY,cACZJ,MAAOd,EACPmB,SAAUT,OAGd,sBAAKM,UAAU,iBAAf,UACE,uBAAOA,UAAU,OAAjB,kBACA,uBACEH,KAAK,WACLG,UAAWC,IACT,eACA,CAAC,WAAYX,GACb,CAAC,cAAeA,IAElBY,YAAY,SACZJ,MAAOV,EACPe,SAAUT,UAIhB,qBAAKM,UAAU,iBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,wBAAQA,UAAU,kBAAkBI,QArG9C,WACMhB,GAAOJ,GACTqB,0BACCC,aAAaC,sBAAoBC,KACjCC,oBAAoB,IACpBC,QAAQ1B,EAASI,GACjBuB,MAAK,SAACC,GACL3B,EAAW2B,EAAIC,YACfpB,GAAkB,MAEnBqB,OAAM,WACL7B,EAAW,iCA0FP,uBAIF,qBAAKe,UAAU,gBAAf,SACE,wBAAQA,UAAU,kBAAkBI,QA3F9C,WACMhB,GAAOJ,GACTqB,0BACCU,QAAQ/B,EAASI,GACjBuB,MAAK,SAACC,GACL3B,EAAW2B,EAAIC,YACfpB,GAAkB,MAEnBqB,OAAM,WACLE,MAAM,sCAkFF,wBAMS,KAAR5B,GAA0B,KAAZJ,IACf,qBAAKgB,UAAU,gBAAf,SACE,wBAAQA,UAAU,oBAAoBI,QA5ElD,WACEX,GAAkB,GAClBF,GAAY,GACZJ,GAAY,GACZF,EAAW,IACXI,EAAO,KAuEG,qBAMY,KAAZL,GAAkBQ,GACpB,qBAAKQ,UAAU,gBAAf,SACE,wBAAQA,UAAU,kBAAkBI,QA7EhD,WACE,GAAIpB,EACF,IACE,GAAIiC,OAAOC,gBACT,OAAOC,UAAUC,UAAUC,UAAUrC,GAGvC,IAAIsC,EAAWC,SAASC,cAAc,YACtCF,EAASxB,MAAQd,EACjBsC,EAASG,MAAMC,SAAW,QAC1BH,SAASI,KAAKC,YAAYN,GAC1BA,EAASO,QACTP,EAASQ,SACTP,SAASQ,YAAY,QACrBR,SAASI,KAAKK,YAAYV,GAE1B,MAAOW,GACPjB,MAAM,8BA4DA,0CCvHCkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BX,M","file":"static/js/main.846ebff8.chunk.js","sourcesContent":["import { createAdapter, EncryptionAlgorithm } from \"iocane\";\r\nimport React, { useState } from \"react\";\r\nimport cn from 'classnames'\r\n\r\nexport const App: React.FC = () => {\r\n  const [ message, setMessage] = useState<string>(\"\")\r\n  const [ messageisValid, setValidMsg] = useState<boolean>(false)\r\n  const [ key, setKey] = useState<string>(\"\")\r\n  const [ keyisValid, setValidKey] = useState<boolean>(false)\r\n  const [ btnCopyVisible, setBtnCopyVisible] = useState<boolean>(false)\r\n\r\n  function encrypt() {\r\n    if (key && message) {\r\n      createAdapter()\r\n      .setAlgorithm(EncryptionAlgorithm.CBC)\r\n      .setDerivationRounds(14)\r\n      .encrypt(message, key)\r\n      .then((res) => {\r\n        setMessage(res.toString())\r\n        setBtnCopyVisible(true)\r\n      })\r\n      .catch(() => {\r\n        setMessage(\"Something's gone wrong...\")\r\n      })\r\n    }\r\n  }\r\n  function decrypt() {\r\n    if (key && message){\r\n      createAdapter()\r\n      .decrypt(message, key)\r\n      .then((res) => {\r\n        setMessage(res.toString())\r\n        setBtnCopyVisible(true)\r\n      })\r\n      .catch(() => {\r\n        alert(\"Cannot decrypt this message...\")\r\n      })\r\n    }\r\n  }\r\n  function changeHandler (e:any) {\r\n    if (e.target.type === 'password') {\r\n      setValidKey(e.target.value.length > 0)\r\n      setKey(e.target.value)\r\n    }\r\n    if (e.target.type === 'textarea') {\r\n      setValidMsg(e.target.value.length > 0)\r\n      setMessage(e.target.value)\r\n    }\r\n  }\r\n  function reset() {\r\n    setBtnCopyVisible(false)\r\n    setValidKey(false)\r\n    setValidMsg(false)\r\n    setMessage(\"\");\r\n    setKey(\"\");\r\n  }\r\n  function copyToClipboard() {\r\n    if (message) {\r\n      try {\r\n        if (window.isSecureContext) {\r\n          return navigator.clipboard.writeText(message)\r\n        }\r\n\r\n        var textArea = document.createElement(\"textarea\");\r\n        textArea.value = message;\r\n        textArea.style.position = \"fixed\";\r\n        document.body.appendChild(textArea);\r\n        textArea.focus();\r\n        textArea.select();\r\n        document.execCommand('copy')\r\n        document.body.removeChild(textArea)\r\n        \r\n      } catch (error) {\r\n        alert(\"Cannot copy to clipboard\")\r\n      } \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form>\r\n        <div className=\"form-group m-2\">\r\n          <label className=\"mb-2\">Message:</label>\r\n          <textarea\r\n            className={cn(\r\n              \"form-control\",\r\n              {'is-valid': messageisValid},\r\n              {'is-invalid': !messageisValid}\r\n            )}\r\n            placeholder=\"(text here)\"\r\n            value={message}\r\n            onChange={changeHandler} \r\n          />\r\n        </div>\r\n        <div className=\"form-group m-2\">\r\n          <label className=\"mb-2\">Key:</label>\r\n          <input\r\n            type=\"password\"\r\n            className={cn(\r\n              \"form-control\",\r\n              {'is-valid': keyisValid},\r\n              {'is-invalid': !keyisValid}\r\n            )}\r\n            placeholder=\"******\"\r\n            value={key}\r\n            onChange={changeHandler} \r\n          />\r\n        </div>\r\n      </form>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-auto py-3\">\r\n            <button className=\"btn btn-primary\" onClick={encrypt}>\r\n              Encrypt\r\n            </button>\r\n          </div>\r\n          <div className=\"col-auto py-3\">\r\n            <button className=\"btn btn-primary\" onClick={decrypt}>\r\n              Decrypt\r\n            </button>\r\n          </div>\r\n          \r\n          {\r\n            (key !== '' || message !== '') &&\r\n            <div className=\"col-auto py-3\">\r\n              <button className=\"btn btn-secondary\" onClick={reset}>\r\n                Reset\r\n              </button>\r\n            </div>\r\n          }\r\n          {\r\n            ( message !== '' && btnCopyVisible ) && \r\n            <div className=\"col-auto py-3\">\r\n              <button className=\"btn btn-success\" onClick={copyToClipboard}>\r\n                Copy to Clipboard\r\n              </button>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}